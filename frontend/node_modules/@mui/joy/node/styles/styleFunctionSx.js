"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sx = exports.lineHeight = exports.letterSpacing = exports.fontWeight = exports.fontSize = exports.fontFamily = exports.default = void 0;

var _system = require("@mui/system");

// The default system themeKey is shape
const borderRadius = (0, _system.style)({
  prop: 'borderRadius',
  themeKey: 'radius'
});
const borders = (0, _system.compose)(_system.border, _system.borderTop, _system.borderRight, _system.borderBottom, _system.borderLeft, _system.borderColor, _system.borderTopColor, _system.borderRightColor, _system.borderBottomColor, _system.borderLeftColor, borderRadius); // The default system themeKey is shadows

const boxShadow = (0, _system.style)({
  prop: 'boxShadow',
  themeKey: 'shadow'
}); // The default system themeKey is typography

const fontFamily = (0, _system.style)({
  prop: 'fontFamily',
  themeKey: 'fontFamily'
}); // The default system themeKey is typography

exports.fontFamily = fontFamily;
const fontSize = (0, _system.style)({
  prop: 'fontSize',
  themeKey: 'fontSize'
}); // The default system themeKey is typography

exports.fontSize = fontSize;
const fontWeight = (0, _system.style)({
  prop: 'fontWeight',
  themeKey: 'fontWeight'
}); // The default system themeKey is typography

exports.fontWeight = fontWeight;
const letterSpacing = (0, _system.style)({
  prop: 'letterSpacing',
  themeKey: 'letterSpacing'
});
exports.letterSpacing = letterSpacing;
const lineHeight = (0, _system.style)({
  prop: 'lineHeight',
  themeKey: 'lineHeight'
});
exports.lineHeight = lineHeight;
const typography = (0, _system.compose)(_system.typographyVariant, fontFamily, fontSize, fontWeight, letterSpacing, lineHeight);
const styleFunctionMapping = {
  borders,
  display: _system.display,
  flexbox: _system.flexbox,
  grid: _system.grid,
  positions: _system.positions,
  palette: _system.palette,
  boxShadow,
  sizing: _system.sizing,
  spacing: _system.spacing,
  typography
};
const styleFunctionSx = (0, _system.unstable_createStyleFunctionSx)(styleFunctionMapping);
styleFunctionSx.filterProps = ['sx'];

const sx = styles => {
  return ({
    theme
  }) => styleFunctionSx({
    sx: styles,
    theme
  });
};

exports.sx = sx;
var _default = styleFunctionSx;
exports.default = _default;