import * as React from 'react';
import { useTheme as useSystemTheme } from '@mui/system';
import defaultTheme from './defaultTheme';
import { jsx as _jsx } from "react/jsx-runtime";
const VariantOverride = /*#__PURE__*/React.createContext(undefined);
export const useColorInversion = childVariant => {
  const overriableVariants = React.useContext(VariantOverride);
  return {
    getColor: (instanceColorProp, defaultColorProp) => {
      if (overriableVariants && childVariant) {
        if (overriableVariants.includes(childVariant)) {
          // @ts-ignore internal logic
          return instanceColorProp || 'context';
        }
      } // @ts-ignore internal logic


      return instanceColorProp || defaultColorProp;
    }
  };
};
export const ColorInversionProvider = ({
  children,
  variant
}) => {
  const theme = useSystemTheme(defaultTheme);
  return /*#__PURE__*/_jsx(VariantOverride.Provider, {
    value: variant ? theme.colorInversionConfig[variant] : undefined,
    children: children
  });
};
export default VariantOverride;